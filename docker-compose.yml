# Docker Compose configuration for Caixa Seguradora Premium Reporting System
# Implements T202 - Phase 10 (Polish)
#
# Usage:
#   Development: docker-compose up --build
#   Production:  docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
#   Stop:        docker-compose down

version: '3.8'

services:
  # Backend API service (.NET 9)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: caixa-seguradora-backend
    ports:
      - "5555:5555"  # HTTP port
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5555
      - ConnectionStrings__DefaultConnection=Data Source=/app/data/premium_reporting.db
      - Jwt__SecretKey=${JWT_SECRET_KEY:-your-secret-key-change-in-production-min-32-chars}
      - Jwt__Issuer=CaixaSeguradora
      - Jwt__Audience=CaixaSeguradora.API
      - Cors__AllowedOrigins__0=http://localhost:5173
      - Serilog__MinimumLevel__Default=Information
    volumes:
      - ./backend/logs:/app/logs:rw
      - ./backend/output:/app/output:rw
      - backend-data:/app/data:rw
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5555/api/v1/health/live"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - app-network
    restart: unless-stopped

  # Frontend React SPA with nginx
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: caixa-seguradora-frontend
    ports:
      - "5173:80"  # Map host 5173 to container 80
    environment:
      - VITE_API_BASE_URL=http://localhost:5555
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  backend-data:
    driver: local
