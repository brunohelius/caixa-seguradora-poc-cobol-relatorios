// <auto-generated />
using System;
using CaixaSeguradora.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CaixaSeguradora.Infrastructure.Migrations
{
    [DbContext(typeof(PremiumReportingDbContext))]
    partial class PremiumReportingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.Address", b =>
                {
                    b.Property<long>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AddressSequence")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AddressType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("ClientCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Complement")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Brasil");

                    b.Property<int>("CountryCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("AddressId");

                    b.HasIndex("ClientCode");

                    b.ToTable("Addresses", (string)null);
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.Agency", b =>
                {
                    b.Property<int>("AgencyCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AgencyName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<int>("RegionalCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RegionalName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("A");

                    b.HasKey("AgencyCode");

                    b.ToTable("Agencies", (string)null);
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.BatchJob", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DayOfMonth")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DayOfWeek")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ExecutionHour")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ExecutionMinute")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastExecutionTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxRetries")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(3);

                    b.Property<DateTime?>("NextExecutionTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("NotificationRecipients")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("RecurrencePattern")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("ReportParameters")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RetryCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("ACTIVE");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("JobId");

                    b.HasIndex("JobName");

                    b.HasIndex("NextExecutionTime");

                    b.HasIndex("Status", "IsEnabled");

                    b.ToTable("BatchJobs", (string)null);
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.BatchJobExecution", b =>
                {
                    b.Property<int>("ExecutionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorMessage")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("ExecutedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("SYSTEM");

                    b.Property<string>("ExecutionLog")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("JobId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OutputFilePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("RecordsProcessed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("RUNNING");

                    b.HasKey("ExecutionId");

                    b.HasIndex("JobId");

                    b.HasIndex("StartTime");

                    b.HasIndex("Status");

                    b.ToTable("BatchJobExecutions", (string)null);
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.Client", b =>
                {
                    b.Property<int>("ClientCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("A");

                    b.Property<string>("ClientType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT");

                    b.Property<int>("CompanyCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT");

                    b.Property<string>("IdentityDocument")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("ClientCode");

                    b.HasIndex("DocumentNumber")
                        .IsUnique();

                    b.ToTable("Clients", (string)null);
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.CossuranceCalculation", b =>
                {
                    b.Property<long>("CalculationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CededCommission")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("CededPremium")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("CossuranceCode")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CossuredPolicyId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PolicyNumber")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("QuotaPercentage")
                        .HasColumnType("decimal(13,9)");

                    b.Property<decimal>("RetainedPremium")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("TotalGrossPremium")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("TotalIOF")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("TotalNetPremium")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("CalculationId");

                    b.HasIndex("CossuredPolicyId");

                    b.HasIndex("PolicyNumber", "CossuranceCode")
                        .HasDatabaseName("IX_CossuranceCalculations_PolicyCossurance");

                    b.ToTable("CossuranceCalculations", (string)null);
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.CossuredPolicy", b =>
                {
                    b.Property<long>("CossuranceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AcquiringCompanyCode")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CededInsuredAmount")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("CededPremium")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("CedingCompanyCode")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CossuranceCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CossuranceType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT");

                    b.Property<int>("CossurerCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CossurerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("IsLeader")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("N");

                    b.Property<decimal>("PercentageShare")
                        .HasColumnType("decimal(13,9)");

                    b.Property<long>("PolicyNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("A");

                    b.HasKey("CossuranceId");

                    b.HasIndex("PolicyNumber", "CossuranceCode")
                        .HasDatabaseName("IX_CossuredPolicies_PolicyCossurance");

                    b.ToTable("CossuredPolicies", (string)null);
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.Coverage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CoverageCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CoverageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("CoverageType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DeductiblePercentage")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("InsuredAmount")
                        .HasColumnType("decimal(15,2)");

                    b.Property<long>("PolicyId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PolicyNumber")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PremiumAmount")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("ProductCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("A");

                    b.HasKey("Id");

                    b.HasIndex("PolicyNumber");

                    b.HasIndex("ProductCode");

                    b.ToTable("Coverages", (string)null);
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.Endorsement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CancellationFlag")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("EndorsementNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EndorsementType")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("TEXT");

                    b.Property<long>("PolicyId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PolicyNumber")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PremiumAmount")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("A");

                    b.HasKey("Id");

                    b.HasIndex("PolicyNumber", "EndorsementNumber");

                    b.ToTable("Endorsements", (string)null);
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.Installment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BarcodeNumber")
                        .IsRequired()
                        .HasMaxLength(47)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("InstallmentAmount")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("InstallmentNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(15,2)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("PE");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId", "InstallmentNumber");

                    b.ToTable("Installments", (string)null);
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<long>("InvoiceNumber")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberOfInstallments")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(15,2)");

                    b.Property<long>("PolicyNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("PE");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceNumber")
                        .IsUnique();

                    b.HasIndex("PolicyNumber");

                    b.ToTable("Invoices", (string)null);
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.Policy", b =>
                {
                    b.Property<long>("PolicyNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AgencyCode")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientCode")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("EndorsementNumber")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("InsuredClientCode")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InsuredCode")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("NetPremium")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("PolicyEndDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PolicyStartDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PolicyStatus")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT");

                    b.Property<string>("PolicyStatusCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProducerCode")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductCode")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProductCode1")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ProposalNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SystemCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalPremium")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("PolicyNumber");

                    b.HasIndex("AgencyCode");

                    b.HasIndex("ClientCode");

                    b.HasIndex("ProducerCode");

                    b.HasIndex("ProductCode");

                    b.HasIndex("ProductCode1");

                    b.HasIndex("PolicyNumber", "EndorsementNumber");

                    b.ToTable("Policies", (string)null);
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.PremiumRecord", b =>
                {
                    b.Property<long>("PremiumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("AdditionalFractionalCossurance")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("AdditionalFractionalItem")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("AdditionalFractionalNet")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("AdditionalFractionalReinsurance")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("AdditionalFractionalTotal")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("AddressNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("AdministrationFeeCossurance")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("AdministrationFeeItem")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("AdministrationFeeNet")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("AdministrationFeeTotal")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("AgencyCode")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("AgencyCommissionCossurance")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("AgencyCommissionItem")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("AgencyCommissionNet")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("AgencyCommissionTotal")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("AgencyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("BasePremiumCossurance")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("BasePremiumItem")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("BasePremiumLocalTotal")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("BasePremiumNet")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("BasePremiumTotal")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("BusinessOperationType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CalculationType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("ClientCode")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClientCode1")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CommissionCossurance")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("CommissionItem")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("CommissionNet")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("CommissionReinsurance")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("CommissionTotal")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("CompanyCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CossuranceIndicator")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CossurancePercentage")
                        .HasColumnType("decimal(13,9)");

                    b.Property<decimal>("CossurancePremium")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DiscountCossurance")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("DiscountItem")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("DiscountNet")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("DiscountReinsurance")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("DiscountTotal")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int?>("EndorsementId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EndorsementNumber")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(15,9)");

                    b.Property<decimal>("FixedPremiumCossurance")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("FixedPremiumItem")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("FixedPremiumLocalTotal")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("FixedPremiumNet")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("FixedPremiumTotal")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("HistoricalOccurrence")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InstallmentNumber")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("InsuredAmountCossurance")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("InsuredAmountItem")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("InsuredAmountLocalTotal")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("InsuredAmountNet")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("InsuredAmountReinsurance")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("InsuredAmountTotal")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("InsuredCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InsuredName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("InsuredPersonType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT");

                    b.Property<string>("InsuredTaxId")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("IofItem")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("IofNet")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("IofTotal")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("IssuanceCostItem")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("IssuanceCostNet")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("IssuanceCostTotal")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("LineOfBusiness")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MovementType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("NetPremiumCossurance")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("NetPremiumItem")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("NetPremiumNet")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("NetPremiumReinsurance")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("NetPremiumTotal")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("OccurrenceNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OperationType")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PolicyNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PolicyStartDate")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("PolicyStatus")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PreferentialCommissionCossurance")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("PreferentialCommissionItem")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("PreferentialCommissionNet")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("PreferentialCommissionTotal")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("ProducerCode")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ProducerCommissionPercentage")
                        .HasColumnType("decimal(6,2)");

                    b.Property<string>("ProducerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductCode")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProductCode1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductModality")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("RecordChecksum")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<int>("ReferenceDay")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReferenceMonth")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReferenceYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("SystemCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TariffPremiumCossurance")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("TariffPremiumItem")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("TariffPremiumNet")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("TariffPremiumReinsurance")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("TariffPremiumTotal")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("TotalPremiumItem")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("TotalPremiumNet")
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("TotalPremiumTotal")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.HasKey("PremiumId");

                    b.HasIndex("ClientCode1");

                    b.HasIndex("EndorsementId");

                    b.HasIndex("PolicyNumber");

                    b.HasIndex("ProductCode1");

                    b.HasIndex("PolicyNumber", "EndorsementNumber");

                    b.HasIndex("CompanyCode", "ReferenceYear", "ReferenceMonth", "ReferenceDay")
                        .HasDatabaseName("IX_PremiumRecords_DateRange");

                    b.ToTable("PremiumRecords", (string)null);
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.Producer", b =>
                {
                    b.Property<int>("ProducerCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AgencyId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("DefaultCommissionPercentage")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("ProducerName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("A");

                    b.Property<string>("TaxId")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.HasKey("ProducerCode");

                    b.HasIndex("AgencyId");

                    b.ToTable("Producers", (string)null);
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.Product", b =>
                {
                    b.Property<int>("ProductCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CommissionPercentage")
                        .HasColumnType("decimal(6,2)");

                    b.Property<int>("CompanyCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IsLifeInsurance")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("N");

                    b.Property<int>("LineOfBusiness")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LineOfBusinessGroup")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductModality")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("A");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT");

                    b.Property<string>("SusepProcessNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("ProductCode");

                    b.HasIndex("ProductStatus")
                        .HasDatabaseName("IX_Products_Status");

                    b.HasIndex("CompanyCode", "LineOfBusiness")
                        .HasDatabaseName("IX_Products_LineOfBusiness");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.ReportDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<string>("OutputFormat")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("TXT");

                    b.Property<int>("RecordLength")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReportCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("ReportName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ReportCode")
                        .IsUnique();

                    b.ToTable("ReportDefinitions", (string)null);
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.SystemConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("ConfigKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("ConfigValue")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ConfigKey")
                        .IsUnique();

                    b.ToTable("SystemConfigurations", (string)null);
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.Address", b =>
                {
                    b.HasOne("CaixaSeguradora.Core.Entities.Client", "Client")
                        .WithMany("Addresses")
                        .HasForeignKey("ClientCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.BatchJobExecution", b =>
                {
                    b.HasOne("CaixaSeguradora.Core.Entities.BatchJob", "BatchJob")
                        .WithMany()
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BatchJob");
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.CossuranceCalculation", b =>
                {
                    b.HasOne("CaixaSeguradora.Core.Entities.CossuredPolicy", "CossuredPolicy")
                        .WithMany()
                        .HasForeignKey("CossuredPolicyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CaixaSeguradora.Core.Entities.Policy", "Policy")
                        .WithMany()
                        .HasForeignKey("PolicyNumber")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CossuredPolicy");

                    b.Navigation("Policy");
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.CossuredPolicy", b =>
                {
                    b.HasOne("CaixaSeguradora.Core.Entities.Policy", "Policy")
                        .WithMany("CossuredPolicies")
                        .HasForeignKey("PolicyNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Policy");
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.Coverage", b =>
                {
                    b.HasOne("CaixaSeguradora.Core.Entities.Policy", "Policy")
                        .WithMany("Coverages")
                        .HasForeignKey("PolicyNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CaixaSeguradora.Core.Entities.Product", "Product")
                        .WithMany("Coverages")
                        .HasForeignKey("ProductCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Policy");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.Endorsement", b =>
                {
                    b.HasOne("CaixaSeguradora.Core.Entities.Policy", "Policy")
                        .WithMany("Endorsements")
                        .HasForeignKey("PolicyNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Policy");
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.Installment", b =>
                {
                    b.HasOne("CaixaSeguradora.Core.Entities.Invoice", "Invoice")
                        .WithMany("Installments")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.Invoice", b =>
                {
                    b.HasOne("CaixaSeguradora.Core.Entities.Policy", "Policy")
                        .WithMany("Invoices")
                        .HasForeignKey("PolicyNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Policy");
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.Policy", b =>
                {
                    b.HasOne("CaixaSeguradora.Core.Entities.Agency", "Agency")
                        .WithMany("Policies")
                        .HasForeignKey("AgencyCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CaixaSeguradora.Core.Entities.Client", "Client")
                        .WithMany("Policies")
                        .HasForeignKey("ClientCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CaixaSeguradora.Core.Entities.Producer", "Producer")
                        .WithMany("Policies")
                        .HasForeignKey("ProducerCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CaixaSeguradora.Core.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CaixaSeguradora.Core.Entities.Product", null)
                        .WithMany("Policies")
                        .HasForeignKey("ProductCode1");

                    b.Navigation("Agency");

                    b.Navigation("Client");

                    b.Navigation("Producer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.PremiumRecord", b =>
                {
                    b.HasOne("CaixaSeguradora.Core.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientCode1");

                    b.HasOne("CaixaSeguradora.Core.Entities.Endorsement", "Endorsement")
                        .WithMany()
                        .HasForeignKey("EndorsementId");

                    b.HasOne("CaixaSeguradora.Core.Entities.Policy", "Policy")
                        .WithMany()
                        .HasForeignKey("PolicyNumber")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("CaixaSeguradora.Core.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductCode1");

                    b.Navigation("Client");

                    b.Navigation("Endorsement");

                    b.Navigation("Policy");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.Producer", b =>
                {
                    b.HasOne("CaixaSeguradora.Core.Entities.Agency", "Agency")
                        .WithMany("Producers")
                        .HasForeignKey("AgencyId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Agency");
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.Agency", b =>
                {
                    b.Navigation("Policies");

                    b.Navigation("Producers");
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.Client", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Policies");
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.Invoice", b =>
                {
                    b.Navigation("Installments");
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.Policy", b =>
                {
                    b.Navigation("CossuredPolicies");

                    b.Navigation("Coverages");

                    b.Navigation("Endorsements");

                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.Producer", b =>
                {
                    b.Navigation("Policies");
                });

            modelBuilder.Entity("CaixaSeguradora.Core.Entities.Product", b =>
                {
                    b.Navigation("Coverages");

                    b.Navigation("Policies");
                });
#pragma warning restore 612, 618
        }
    }
}
